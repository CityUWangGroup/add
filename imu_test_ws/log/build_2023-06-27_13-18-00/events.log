[0.000000] (-) TimerEvent: {}
[0.000073] (imu_get) JobQueued: {'identifier': 'imu_get', 'dependencies': OrderedDict()}
[0.000108] (imu_get) JobStarted: {'identifier': 'imu_get'}
[0.004041] (imu_get) JobProgress: {'identifier': 'imu_get', 'progress': 'cmake'}
[0.004164] (imu_get) Command: {'cmd': ['/usr/bin/cmake', '/home/duanye/code/imu_test_ws/imu_get', '-DCMAKE_INSTALL_PREFIX=/home/duanye/code/imu_test_ws/install/imu_get'], 'cwd': '/home/duanye/code/imu_test_ws/build/imu_get', 'env': OrderedDict([('SUDO_GID', '1000'), ('MAIL', '/var/mail/root'), ('LANGUAGE', 'en_US:en'), ('LC_TIME', 'zh_CN.UTF-8'), ('USER', 'root'), ('HOME', '/root'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('COLORTERM', 'truecolor'), ('SUDO_UID', '1000'), ('LOGNAME', 'root'), ('TERM', 'xterm-256color'), ('PATH', '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SUDO_COMMAND', '/usr/bin/colcon build --packages-select imu_get'), ('LC_NAME', 'zh_CN.UTF-8'), ('SHELL', '/bin/bash'), ('SUDO_USER', 'duanye'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/duanye/code/imu_test_ws/build/imu_get'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1')]), 'shell': False}
[0.032215] (imu_get) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.066674] (imu_get) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.068911] (imu_get) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.099297] (-) TimerEvent: {}
[0.127465] (imu_get) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.128955] (imu_get) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.199410] (-) TimerEvent: {}
[0.224500] (imu_get) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.240310] (imu_get) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.240702] (imu_get) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.242596] (imu_get) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.299493] (-) TimerEvent: {}
[0.309255] (imu_get) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.310412] (imu_get) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.399659] (-) TimerEvent: {}
[0.421987] (imu_get) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.427723] (imu_get) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.427912] (imu_get) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.432865] (imu_get) StderrLine: {'line': b'CMake Error at CMakeLists.txt:19 (find_package):\n'}
[0.432961] (imu_get) StderrLine: {'line': b'  By not providing "Findament_cmake.cmake" in CMAKE_MODULE_PATH this project\n'}
[0.433008] (imu_get) StderrLine: {'line': b'  has asked CMake to find a package configuration file provided by\n'}
[0.433049] (imu_get) StderrLine: {'line': b'  "ament_cmake", but CMake did not find one.\n'}
[0.433074] (imu_get) StderrLine: {'line': b'\n'}
[0.433098] (imu_get) StderrLine: {'line': b'  Could not find a package configuration file provided by "ament_cmake" with\n'}
[0.433121] (imu_get) StderrLine: {'line': b'  any of the following names:\n'}
[0.433143] (imu_get) StderrLine: {'line': b'\n'}
[0.433165] (imu_get) StderrLine: {'line': b'    ament_cmakeConfig.cmake\n'}
[0.433187] (imu_get) StderrLine: {'line': b'    ament_cmake-config.cmake\n'}
[0.433209] (imu_get) StderrLine: {'line': b'\n'}
[0.433230] (imu_get) StderrLine: {'line': b'  Add the installation prefix of "ament_cmake" to CMAKE_PREFIX_PATH or set\n'}
[0.433251] (imu_get) StderrLine: {'line': b'  "ament_cmake_DIR" to a directory containing one of the above files.  If\n'}
[0.433272] (imu_get) StderrLine: {'line': b'  "ament_cmake" provides a separate development package or SDK, be sure it\n'}
[0.433293] (imu_get) StderrLine: {'line': b'  has been installed.\n'}
[0.433317] (imu_get) StderrLine: {'line': b'\n'}
[0.433338] (imu_get) StderrLine: {'line': b'\n'}
[0.433365] (imu_get) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[0.433389] (imu_get) StdoutLine: {'line': b'See also "/home/duanye/code/imu_test_ws/build/imu_get/CMakeFiles/CMakeOutput.log".\n'}
[0.434836] (imu_get) CommandEnded: {'returncode': 1}
[0.446912] (imu_get) JobEnded: {'identifier': 'imu_get', 'rc': 1}
[0.457320] (-) EventReactorShutdown: {}
